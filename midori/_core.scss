/**
 * This is the file to provide all core functions for midori
 *
 * @author Jack <jack.fu@cxagroup.com>
 * @version 0.0.1
 * @date Wed Nov 15 15:03:40 2017
 */

/**
 * Enable the auto prefixer by default
 */
$midori-enable-autoprefixer: true !default;

@function midori-get-keys($map) {
    $keys: ();

    @each $key, $val in $chart-colours {
        $keys: append($keys, $key);
    }

    @return $keys;
}

/**
 * Get the color from the palette for you
 */
@function midori-get-color($group, $name, $palette) {
    $color: map-get(map-get($palette, $group), $name);

    // if the colour isn't found in the provided palette, throw an error
    @if $color == null {
        @error "Color #{$name} not found in this palette #{$group}.";
    }

    @return $color;
}

@function midori-is-direction($value) {
  $is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));

  @return $is-keyword or $is-angle;
}


/// Convert a direction to legacy syntax
/// @param {Keyword | Angle} $value - Value to convert
/// @require {function} is-direction
/// @require {function} convert-angle
/// @throw Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.;
/// @see https://www.sitepoint.com/building-linear-gradient-mixin-sass/
@function midori-legacy-direction($value) {
	@if "#{$value}" == "to top" {
		@return bottom;
	}

	@if $value == "to top right" {
		@return bottom left;
	}

	@if $value == "to right top" {
		@return left bottom;
	}

	@if $value == "to right" {
		@return left bottom;
	}

	@if $value == "to bottom right" {
		@return top left;
	}

	@if $value == "to right bottom" {
		@return left top;
	}

	@if $value == "to bottom" {
		@return top;
	}

	@if $value == "to bottom left" {
		@return top right;
	}

	@if $value == "to left bottom" {
		@return right top;
	}

	@if $value == "to left" {
		@return right;
	}

	@if $value == "to left top" {
		@return right bottom;
	}

	@if $value == "to top left" {
		@return bottom right;
	}

	@return 90deg - $value;
}
